// Copyright (C) 1991-2011 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II Version 10.1 (Build Build 197 01/19/2011)
// Created on Tue Nov 01 01:22:25 2011

video_process video_process_inst
(
	.reset_n(reset_n_sig) ,	// input  reset_n_sig
	.clk_sys(clk_sys_sig) ,	// input  clk_sys_sig
	.clk_sdr(clk_sdr_sig) ,	// input  clk_sdr_sig
	.clk_pixel(clk_pixel_sig) ,	// input  clk_pixel_sig
	.bt656_clk_27m(bt656_clk_27m_sig) ,	// input  bt656_clk_27m_sig
	.bt656_data(bt656_data_sig) ,	// input [7:0] bt656_data_sig
	.vga_clk(vga_clk_sig) ,	// output  vga_clk_sig
	.vga_blank(vga_blank_sig) ,	// output  vga_blank_sig
	.vga_hs(vga_hs_sig) ,	// output  vga_hs_sig
	.vga_vs(vga_vs_sig) ,	// output  vga_vs_sig
	.vga_rgb(vga_rgb_sig) ,	// output [23:0] vga_rgb_sig
	.sdr_addr(sdr_addr_sig) ,	// output [11:0] sdr_addr_sig
	.sdr_ba(sdr_ba_sig) ,	// output [1:0] sdr_ba_sig
	.sdr_cas(sdr_cas_sig) ,	// output [0:0] sdr_cas_sig
	.sdr_cke(sdr_cke_sig) ,	// output [0:0] sdr_cke_sig
	.sdr_cs(sdr_cs_sig) ,	// output [0:0] sdr_cs_sig
	.sdr_dq(sdr_dq_sig) ,	// inout [15:0] sdr_dq_sig
	.sdr_dqm(sdr_dqm_sig) ,	// output [1:0] sdr_dqm_sig
	.sdr_ras(sdr_ras_sig) ,	// output [0:0] sdr_ras_sig
	.sdr_we(sdr_we_sig) ,	// output [0:0] sdr_we_sig
	.sdr_clk(sdr_clk_sig) 	// output [0:0] sdr_clk_sig
);

